global
    daemon
    log stdout local0
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    
defaults
    mode tcp
    log global
    option tcplog
    option dontlognull
    option tcp-check
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    timeout check 5000ms
    retries 3

# HAProxy 통계 페이지
stats enable
stats uri /stats
stats refresh 30s

# HAProxy 상태 페이지
frontend stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 30s
    stats auth admin:password123

# Redis Master (Write)
frontend redis_write
    bind *:6379
    mode tcp
    default_backend redis_master

# Redis Slaves (Read)
frontend redis_read
    bind *:6380
    mode tcp
    default_backend redis_slaves

# Master 백엔드 (Write)
backend redis_master
    mode tcp
    balance first
    option tcp-check
    tcp-check connect
    tcp-check send AUTH\ 1111\r\n
    tcp-check expect string +OK
    tcp-check send PING\r\n
    tcp-check expect string +PONG
    tcp-check send info\ replication\r\n
    tcp-check expect string role:master
    tcp-check send QUIT\r\n
    tcp-check expect string +OK
    
    server redis-master redis-master:6379 check inter 5s rise 2 fall 3
    # 마스터 장애 시 자동으로 새 마스터 승격 (Sentinel)
    server redis-slave1 redis-slave1:6379 check inter 5s rise 2 fall 3 backup
    server redis-slave2 redis-slave2:6379 check inter 5s rise 2 fall 3 backup
    server redis-slave3 redis-slave3:6379 check inter 5s rise 2 fall 3 backup

# Slaves 백엔드 (Read)
backend redis_slaves
    mode tcp
    balance roundrobin
    option tcp-check
    tcp-check connect
    tcp-check send AUTH\ 1111\r\n
    tcp-check expect string +OK
    tcp-check send PING\r\n
    tcp-check expect string +PONG
    tcp-check send info\ replication\r\n
    tcp-check expect string role:slave
    tcp-check send QUIT\r\n
    tcp-check expect string +OK
    
    server redis-slave1 redis-slave1:6379 check inter 5s rise 2 fall 3
    server redis-slave2 redis-slave2:6379 check inter 5s rise 2 fall 3
    server redis-slave3 redis-slave3:6379 check inter 5s rise 2 fall 3
    # Master도 Read에 포함 (부하 분산)
    server redis-master redis-master:6379 check inter 5s rise 2 fall 3

# Sentinel 프록시
frontend redis_sentinel
    bind *:26379
    mode tcp
    default_backend redis_sentinels

backend redis_sentinels
    mode tcp
    balance roundrobin
    option tcp-check
    tcp-check connect
    tcp-check send PING\r\n
    tcp-check expect string +PONG
    tcp-check send QUIT\r\n
    tcp-check expect string +OK
    
    server sentinel1 sentinel1:26379 check inter 5s rise 2 fall 3
    server sentinel2 sentinel2:26379 check inter 5s rise 2 fall 3
    server sentinel3 sentinel3:26379 check inter 5s rise 2 fall 3
