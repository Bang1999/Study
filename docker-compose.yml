version: '3.9'

services:
  redis-master:
    image: redis:7
    container_name: redis-master
    expose:
      - "6379"
    volumes:
      - ./redis/master/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-net
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "1111", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-slave1:
    image: redis:7
    container_name: redis-slave1
    expose:
      - "6379"
    depends_on:
      - redis-master
    volumes:
      - ./redis/slave1/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-net
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "1111", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-slave2:
    image: redis:7
    container_name: redis-slave2
    expose:
      - "6379"
    depends_on:
      - redis-master
    volumes:
      - ./redis/slave2/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-net
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "1111", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-slave3:
    image: redis:7
    container_name: redis-slave3
    expose:
      - "6379"
    depends_on:
      - redis-master
    volumes:
      - ./redis/slave3/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-net
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "1111", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  sentinel1:
    image: redis:7
    container_name: sentinel1
    ports:
      - "8000:26379"
    depends_on:
      redis-master:
        condition: service_healthy
    volumes:
      - ./sentinel/sentinel1.conf:/usr/local/etc/redis/sentinel.conf
    command: redis-server /usr/local/etc/redis/sentinel.conf --sentinel
    networks:
      - redis-net
    restart: unless-stopped

  sentinel2:
    image: redis:7
    container_name: sentinel2
    ports:
      - "8001:26379"
    depends_on:
      redis-master:
        condition: service_healthy
    volumes:
      - ./sentinel/sentinel2.conf:/usr/local/etc/redis/sentinel.conf
    command: redis-server /usr/local/etc/redis/sentinel.conf --sentinel
    networks:
      - redis-net
    restart: unless-stopped

  sentinel3:
    image: redis:7
    container_name: sentinel3
    ports:
      - "8002:26379"
    depends_on:
      redis-master:
        condition: service_healthy
    volumes:
      - ./sentinel/sentinel3.conf:/usr/local/etc/redis/sentinel.conf
    command: redis-server /usr/local/etc/redis/sentinel.conf --sentinel
    networks:
      - redis-net
    restart: unless-stopped

  haproxy:
    image: haproxy:2.8
    container_name: haproxy
    ports:
      - "6379:6379"     # Redis write (Master)
      - "6380:6380"     # Redis read (Slaves1~3)
      - "8404:8404"     # HAProxy 상태 페이지
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - redis-master
      - redis-slave1
      - redis-slave2
      - redis-slave3
    networks:
      - redis-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8404/stats"]
      interval: 30s
      timeout: 10s
      retries: 3
    tmpfs:
      - /run/haproxy
    user: root

networks:
  redis-net:
    name: redis-net
    driver: bridge
